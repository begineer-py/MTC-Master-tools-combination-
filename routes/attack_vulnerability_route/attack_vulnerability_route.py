from flask import Blueprint, request, jsonify, redirect, url_for, render_template, current_app
import logging
from instance.models import crawler_each_url, Target

# 设置日志
logger = logging.getLogger(__name__)

attack_vulnerability_route = Blueprint('attack_vulnerability_route', __name__)

@attack_vulnerability_route.route('/<int:target_id>', methods=['GET'])
def attack_vulnerability(target_id):
    """漏洞攻击"""
    try:
        # 获取目标信息
        target = Target.query.get_or_404(target_id)
        
        # 从数据库获取URL列表
        urls = crawler_each_url.query.filter_by(target_id=target_id).all()
        url_data = []
        
        for url in urls:
            url_data.append({
                'id': url.id,
                'url': url.url,
                'status_code': url.status_code,
                'content_type': url.content_type
            })
        
        # 渲染模板
        return render_template(
            'vulnerability_start.html',
            target_id=target_id,
            target=target,
            urls=url_data,
        )
        
    except Exception as e:
        current_app.logger.error(f"載入漏洞攻擊頁面時出錯: {str(e)}")
        return jsonify({
            'success': False,
            'message': f'載入頁面失敗: {str(e)}'
        }), 500

