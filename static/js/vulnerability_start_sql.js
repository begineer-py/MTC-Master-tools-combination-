// vulnerability_start.js

document.addEventListener('DOMContentLoaded', function() {
    // 獲取掃描按鈕
    const sqlInjectionScanBtn = document.querySelector('.sql-injection-scan-btn');
    
    if (sqlInjectionScanBtn) {
        sqlInjectionScanBtn.addEventListener('click', async function() {
            try {
                // 禁用按鈕,防止重複點擊
                this.disabled = true;
                
                // 獲取目標信息
                const userId = this.dataset.userId;
                const targetId = this.dataset.targetId;
                const targetUrl = this.dataset.targetUrl;
                
                // 更新狀態顯示
                const statusDiv = document.getElementById(`sql-injection-status-${targetId}`);
                statusDiv.textContent = '正在執行SQL注入掃描...';
                statusDiv.className = 'scan-status scanning';
                
                // 發送掃描請求
                const response = await fetch(`/attack/vulnerability/api/${userId}/${targetId}/vulnerability/sql-injection/scan`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });
                
                const result = await response.json();
                
                // 處理掃描結果
                const resultDiv = document.getElementById(`sql-injection-result-${targetId}`);
                
                if (result.status === 'success') {
                    statusDiv.textContent = '掃描完成';
                    statusDiv.className = 'scan-status success';
                    
                    // 格式化並顯示結果
                    let resultHtml = '<div class="scan-result">';
                    
                    // 顯示漏洞信息
                    if (result.result.vulnerabilities && result.result.vulnerabilities.length > 0) {
                        resultHtml += '<h4>發現漏洞:</h4><ul>';
                        result.result.vulnerabilities.forEach(vuln => {
                            resultHtml += `
                                <li>
                                    <strong>參數:</strong> ${vuln.parameter}<br>
                                    <strong>詳情:</strong> ${vuln.details}<br>
                                    <strong>類型:</strong> ${vuln.type}
                                </li>`;
                        });
                        resultHtml += '</ul>';
                    } else {
                        resultHtml += '<p>未發現SQL注入漏洞</p>';
                    }
                    
                    // 顯示數據庫信息
                    if (result.result.database_info && Object.keys(result.result.database_info).length > 0) {
                        resultHtml += `
                            <h4>數據庫信息:</h4>
                            <p><strong>類型:</strong> ${result.result.database_info.type || '未知'}</p>`;
                    }
                    
                    // 顯示表信息
                    if (result.result.tables && result.result.tables.length > 0) {
                        resultHtml += `
                            <h4>發現的表:</h4>
                            <ul>
                                ${result.result.tables.map(table => `<li>${table}</li>`).join('')}
                            </ul>`;
                    }
                    
                    resultHtml += '</div>';
                    resultDiv.innerHTML = resultHtml;
                } else {
                    statusDiv.textContent = '掃描失敗';
                    statusDiv.className = 'scan-status error';
                    resultDiv.innerHTML = `<div class="error-message">${result.message}</div>`;
                }
                
            } catch (error) {
                console.error('掃描過程出錯:', error);
                const statusDiv = document.getElementById(`sql-injection-status-${targetId}`);
                statusDiv.textContent = '掃描出錯';
                statusDiv.className = 'scan-status error';
                
                const resultDiv = document.getElementById(`sql-injection-result-${targetId}`);
                resultDiv.innerHTML = `<div class="error-message">掃描過程中發生錯誤: ${error.message}</div>`;
            } finally {
                // 重新啟用按鈕
                this.disabled = false;
            }
        });
    }

    // 其他漏洞掃描功能可以在這裡添加...
}); 