from flask import Blueprint, request, jsonify, current_app, render_template
from vulnerability_scanning.threads.threads_xss import XSSThread
# from utils.decorators import login_required  # 确保移除
from utils.permission import check_user_permission
from instance.models import Target, xss_result, db
from vulnerability_scanning.threads.threads_xss import XssScanThread

xss_blueprint = Blueprint('xss', __name__)

@xss_blueprint.route('/scan/<int:target_id>', methods=['POST'])
def start_xss_scan(target_id):
    # 检查权限
    permission_result = check_user_permission(target_id=target_id)
    if not isinstance(permission_result, Target):
        return permission_result
    
    target = permission_result
    
    # 准备参数 (例如，从请求中获取)
    scan_options = request.get_json() or {}
    
    try:
        # 创建并启动XSS扫描线程
        xss_thread = XssScanThread(target_id, target.target_ip, scan_options, app=current_app._get_current_object())
        xss_thread.start()
        return jsonify({'success': True, 'message': 'XSS扫描已启动'}), 202
    except Exception as e:
        current_app.logger.error(f"启动XSS扫描时出错: {str(e)}")
        return jsonify({'success': False, 'message': f'启动扫描失败: {str(e)}'}), 500

@xss_blueprint.route('/result/<int:target_id>', methods=['GET'])
def get_xss_result(target_id):
    # 检查权限
    permission_result = check_user_permission(target_id=target_id)
    if not isinstance(permission_result, Target):
        return permission_result
    
    try:
        # 查询最新的扫描结果
        result = xss_result.query.filter_by(target_id=target_id).order_by(xss_result.scan_time.desc()).first()
        
        if not result:
            return jsonify({'success': True, 'message': '未找到扫描结果', 'result': None}), 200
        
        return jsonify({'success': True, 'message': '获取结果成功', 'result': result.to_dict()}), 200
    
    except Exception as e:
        current_app.logger.error(f"获取XSS扫描结果时出错: {str(e)}")
        return jsonify({'success': False, 'message': f'获取结果失败: {str(e)}'}), 500

@xss_blueprint.route('/download/<int:user_id>/<int:target_id>', methods=['GET'])
def xss_download(user_id, target_id):
    pass

@xss_blueprint.route('/result_page/<int:target_id>', methods=['GET'])
def show_xss_result_page(target_id):
    # 检查权限
    permission_result = check_user_permission(target_id=target_id)
    if not isinstance(permission_result, Target):
        return permission_result # 或者重定向到错误页面
    
    # 渲染结果页面，传递target_id
    return render_template('result/xss_result.html', target_id=target_id)
